openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelloWorldDto'
  /auth/sign-up:
    post:
      operationId: AuthController_signUp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpBodyDto'
      responses:
        '201':
          description: ''
      tags:
        - Auth
  /auth/sign-in:
    post:
      operationId: AuthController_signIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInBodyDto'
      responses:
        '200':
          description: ''
      tags:
        - Auth
  /auth/sign-out:
    post:
      operationId: AuthController_signOut
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Auth
  /auth/session:
    get:
      operationId: AuthController_getSessionInfo
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSessionInfoDto'
      tags:
        - Auth
  /account:
    get:
      operationId: AccountController_getAccount
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
      tags:
        - Account
    patch:
      operationId: AccountController_patchAccount
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAccountDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDto'
      tags:
        - Account
  /blog:
    get:
      operationId: BlogController_index
      parameters: []
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostDto'
      tags:
        - Blog
    post:
      operationId: BlogController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBodyDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDto'
      tags:
        - Blog
  /blog/{id}:
    get:
      operationId: BlogController_show
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDto'
      tags:
        - Blog
    patch:
      operationId: BlogController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBodyDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDto'
      tags:
        - Blog
info:
  title: Block list
  description: ''
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    HelloWorldDto:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    SignUpBodyDto:
      type: object
      properties:
        email:
          type: string
          example: test@gmail.com
        password:
          type: string
          example: Abcd1234!
      required:
        - email
        - password
    SignInBodyDto:
      type: object
      properties:
        email:
          type: string
          example: test@gmail.com
        password:
          type: string
          example: Abcd1234!
      required:
        - email
        - password
    GetSessionInfoDto:
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        iat:
          type: number
        exp:
          type: number
      required:
        - id
        - email
        - iat
        - exp
    AccountDto:
      type: object
      properties:
        id:
          type: number
        ownerId:
          type: number
        points:
          type: number
      required:
        - id
        - ownerId
        - points
    PatchAccountDto:
      type: object
      properties:
        points:
          type: number
      required:
        - points
    PostDto:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        content:
          type: string
        date:
          format: date-time
          type: string
        authorId:
          type: number
        categoryId:
          type: object
      required:
        - id
        - title
        - content
        - date
        - authorId
        - categoryId
    PostBodyDto:
      type: object
      properties:
        title:
          type: string
          example: Post Title Test
        content:
          type: string
          example: Content <b>Test</b>
        authorId:
          type: number
          example: 1
        categoryId:
          type: number
          example: 1
      required:
        - title
        - content
        - authorId
        - categoryId
